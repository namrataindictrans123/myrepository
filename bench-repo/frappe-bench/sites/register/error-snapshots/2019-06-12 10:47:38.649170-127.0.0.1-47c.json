{
 "etype": "NameError", 
 "evalue": "NameError(\"global name 'msgprint' is not defined\",)", 
 "exception": {
  "args": "(\"global name 'msgprint' is not defined\",)", 
  "message": "\"global name 'msgprint' is not defined\""
 }, 
 "frames": [
  {
   "call": "(request=<Request 'http://localhost:9001/' [POST]>)", 
   "dump": {
    "frappe. handler": "<module 'frappe.handler' from '/home/indictrans/...epo/frappe-bench/apps/frappe/frappe/handler.pyc'>", 
    "frappe.handler. handle": "<function handle>", 
    "global frappe": "<module 'frappe' from '/home/indictrans/workspac...po/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "response": "None"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/app.py", 
   "func": "application", 
   "lines": {
    "59": "", 
    "60": "\t\tif frappe.local.form_dict.cmd:", 
    "61": "\t\t\tresponse = frappe.handler.handle()", 
    "62": "", 
    "63": "\t\telif frappe.request.path.startswith(\"/api/\"):"
   }, 
   "lnum": 61
  }, 
  {
   "call": "()", 
   "dump": {
    "cmd": "u'runserverobj'", 
    "data": "None", 
    "global execute_cmd": "<function execute_cmd>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/handler.py", 
   "func": "handle", 
   "lines": {
    "19": "", 
    "20": "\tif cmd!='login':", 
    "21": "\t\tdata = execute_cmd(cmd)", 
    "22": "", 
    "23": "\t# data can be an empty string or list which are valid responses"
   }, 
   "lnum": 21
  }, 
  {
   "call": "(cmd=u'runserverobj', from_async=False)", 
   "dump": {
    "frappe. call": "<function call>", 
    "frappe. form_dict": "{'docs': u'{\"docstatus\":0,\"doctype\":\"Registratio...', 'cmd': u'runserverobj', 'method': u'register'}", 
    "global frappe": "<module 'frappe' from '/home/indictrans/workspac...po/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "method": "<function runserverobj>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/handler.py", 
   "func": "execute_cmd", 
   "lines": {
    "54": "\tis_whitelisted(method)", 
    "55": "", 
    "56": "\treturn frappe.call(method, **frappe.form_dict)", 
    "57": "", 
    "58": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(fn=<function runserverobj>, *args=(), **kwargs={'cmd': u'runserverobj', 'docs': u'{\"docstatus\":0,\"doctype\":\"Registration\",\"name\"...-\",\"gender\":\"--Select--\",\"country\":\"--Select--\"}', 'method': u'register'})", 
   "dump": {
    "args": "()", 
    "fn": "<function runserverobj>", 
    "newargs": "{'docs': u'{\"docstatus\":0,\"doctype\":\"Registration\",\"name\"...-\",\"gender\":\"--Select--\",\"country\":\"--Select--\"}', 'method': u'register'}"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/__init__.py", 
   "func": "call", 
   "lines": {
    "1030": "\tnewargs = get_newargs(fn, kwargs)", 
    "1031": "", 
    "1032": "\treturn fn(*args, **newargs)", 
    "1033": "", 
    "1034": "def get_newargs(fn, kwargs):"
   }, 
   "lnum": 1032
  }, 
  {
   "call": "(method=u'register', docs=u'{\"docstatus\":0,\"doctype\":\"Registration\",\"name\"...-\",\"gender\":\"--Select--\",\"country\":\"--Select--\"}', dt=None, dn=None, arg=None, args=None)", 
   "dump": {
    "arg": "None", 
    "args": "None", 
    "dn": "None", 
    "docs": "u'{\"docstatus\":0,\"doctype\":\"Registration\",\"name\"...-\",\"gender\":\"--Select--\",\"country\":\"--Select--\"}'", 
    "dt": "None", 
    "frappe. desk": "<module 'frappe.desk' from '/home/indictrans/wor...appe-bench/apps/frappe/frappe/desk/__init__.pyc'>", 
    "frappe.desk. form": "<module 'frappe.desk.form' from '/home/indictran...bench/apps/frappe/frappe/desk/form/__init__.pyc'>", 
    "frappe.desk.form. run_method": "<module 'frappe.desk.form.run_method' from '/hom...nch/apps/frappe/frappe/desk/form/run_method.pyc'>", 
    "frappe.desk.form.run_method. runserverobj": "<function runserverobj>", 
    "global frappe": "<module 'frappe' from '/home/indictrans/workspac...po/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "method": "u'register'"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/handler.py", 
   "func": "runserverobj", 
   "lines": {
    "82": "@frappe.whitelist()", 
    "83": "def runserverobj(method, docs=None, dt=None, dn=None, arg=None, args=None):", 
    "84": "\tfrappe.desk.form.run_method.runserverobj(method, docs=docs, dt=dt, dn=dn, arg=arg, args=args)", 
    "85": "", 
    "86": "@frappe.whitelist(allow_guest=True)"
   }, 
   "lnum": 84
  }, 
  {
   "call": "(method=u'register', docs=u'{\"docstatus\":0,\"doctype\":\"Registration\",\"name\"...-\",\"gender\":\"--Select--\",\"country\":\"--Select--\"}', dt=None, dn=None, arg=None, args=u'')", 
   "dump": {
    "doc": "<tourism.tourism.doctype.registration.registration.Registration object>", 
    "doc. run_method": "<bound method Registration.run_method of <touris...e.registration.registration.Registration object>>", 
    "method": "u'register'", 
    "r": "undefined"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/desk/form/run_method.py", 
   "func": "runserverobj", 
   "lines": {
    "34": "\t\tfnargs, varargs, varkw, defaults = inspect.getargspec(getattr(doc, method))", 
    "35": "\t\tif not fnargs or (len(fnargs)==1 and fnargs[0]==\"self\"):", 
    "36": "\t\t\tr = doc.run_method(method)", 
    "37": "", 
    "38": "\t\telif \"args\" in fnargs or not isinstance(args, dict):"
   }, 
   "lnum": 36
  }, 
  {
   "call": "(self=<tourism.tourism.doctype.registration.registration.Registration object>, method=u'register', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function register>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "out": "undefined", 
    "self": "<tourism.tourism.doctype.registration.registration.Registration object>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "770": "", 
    "771": "\t\tfn.__name__ = str(method)", 
    "772": "\t\tout = Document.hook(fn)(self, *args, **kwargs)", 
    "773": "", 
    "774": "\t\tself.run_notifications(method)"
   }, 
   "lnum": 772
  }, 
  {
   "call": "(self=<tourism.tourism.doctype.registration.registration.Registration object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'register'", 
    "self": "<tourism.tourism.doctype.registration.registration.Registration object>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "1046": "", 
    "1047": "\t\t\tcomposed = compose(f, *hooks)", 
    "1048": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "1049": "", 
    "1050": "\t\treturn composer"
   }, 
   "lnum": 1048
  }, 
  {
   "call": "(self=<tourism.tourism.doctype.registration.registration.Registration object>, method='register', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function register>", 
    "kwargs": "{}", 
    "self": "<tourism.tourism.doctype.registration.registration.Registration object>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "1029": "\t\tdef compose(fn, *hooks):", 
    "1030": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "1031": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "1032": "\t\t\t\tfor f in hooks:", 
    "1033": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 1031
  }, 
  {
   "call": "(self=<tourism.tourism.doctype.registration.registration.Registration object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'register'", 
    "self": "<tourism.tourism.doctype.registration.registration.Registration object>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "764": "", 
    "765": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "766": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "767": "\t\telse:", 
    "768": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 766
  }, 
  {
   "call": "(self=<tourism.tourism.doctype.registration.registration.Registration object>)", 
   "dump": {
    "msgprint": "undefined"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/tourism/tourism/tourism/doctype/registration/registration.py", 
   "func": "register", 
   "lines": {
    "9": "class Registration(Document):", 
    "10": "\tdef register(self):", 
    "11": "\t\tmsgprint(\"registered\")", 
    "12": "", 
    "13": ""
   }, 
   "lnum": 11
  }
 ], 
 "locals": {
  "self": "<tourism.tourism.doctype.registration.registration.Registration object>"
 }, 
 "pyver": "Python 2.7.12: /home/indictrans/workspace/Registration/bench-repo/frappe-bench/env/bin/python (prefix: /home/indictrans/workspace/Registration/bench-repo/frappe-bench/env)", 
 "timestamp": "2019-06-12 10:47:38.649344", 
 "traceback": "Traceback (most recent call last):\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/app.py\", line 61, in application\n    response = frappe.handler.handle()\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/handler.py\", line 21, in handle\n    data = execute_cmd(cmd)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/handler.py\", line 56, in execute_cmd\n    return frappe.call(method, **frappe.form_dict)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/__init__.py\", line 1032, in call\n    return fn(*args, **newargs)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/handler.py\", line 84, in runserverobj\n    frappe.desk.form.run_method.runserverobj(method, docs=docs, dt=dt, dn=dn, arg=arg, args=args)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/desk/form/run_method.py\", line 36, in runserverobj\n    r = doc.run_method(method)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py\", line 772, in run_method\n    out = Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py\", line 1048, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py\", line 1031, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py\", line 766, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/tourism/tourism/tourism/doctype/registration/registration.py\", line 11, in register\n    msgprint(\"registered\")\nNameError: global name 'msgprint' is not defined\n"
}