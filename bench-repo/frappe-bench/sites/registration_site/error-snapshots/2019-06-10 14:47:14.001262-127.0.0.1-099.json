{
 "etype": "ImportError", 
 "evalue": "ImportError('No module named maharashtra_torism',)", 
 "exception": {
  "args": "('No module named maharashtra_torism',)", 
  "message": "'No module named maharashtra_torism'"
 }, 
 "frames": [
  {
   "call": "(request=<Request 'http://localhost:8089/' [POST]>)", 
   "dump": {
    "frappe. handler": "<module 'frappe.handler' from '/home/indictrans/...epo/frappe-bench/apps/frappe/frappe/handler.pyc'>", 
    "frappe.handler. handle": "<function handle>", 
    "global frappe": "<module 'frappe' from '/home/indictrans/workspac...po/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "response": "None"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/app.py", 
   "func": "application", 
   "lines": {
    "59": "", 
    "60": "\t\tif frappe.local.form_dict.cmd:", 
    "61": "\t\t\tresponse = frappe.handler.handle()", 
    "62": "", 
    "63": "\t\telif frappe.request.path.startswith(\"/api/\"):"
   }, 
   "lnum": 61
  }, 
  {
   "call": "()", 
   "dump": {
    "cmd": "u'frappe.client.insert'", 
    "data": "None", 
    "global execute_cmd": "<function execute_cmd>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/handler.py", 
   "func": "handle", 
   "lines": {
    "19": "", 
    "20": "\tif cmd!='login':", 
    "21": "\t\tdata = execute_cmd(cmd)", 
    "22": "", 
    "23": "\t# data can be an empty string or list which are valid responses"
   }, 
   "lnum": 21
  }, 
  {
   "call": "(cmd=u'frappe.client.insert', from_async=False)", 
   "dump": {
    "frappe. call": "<function call>", 
    "frappe. form_dict": "{'doc': u'{\"docstatus\":0,\"doctype\":\"Module Def\",...ashtra_torism\"}', 'cmd': u'frappe.client.insert'}", 
    "global frappe": "<module 'frappe' from '/home/indictrans/workspac...po/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "method": "<function insert>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/handler.py", 
   "func": "execute_cmd", 
   "lines": {
    "54": "\tis_whitelisted(method)", 
    "55": "", 
    "56": "\treturn frappe.call(method, **frappe.form_dict)", 
    "57": "", 
    "58": ""
   }, 
   "lnum": 56
  }, 
  {
   "call": "(fn=<function insert>, *args=(), **kwargs={'cmd': u'frappe.client.insert', 'doc': u'{\"docstatus\":0,\"doctype\":\"Module Def\",\"name\":\"...:\"Registration\",\"app_name\":\"Maharashtra_torism\"}'})", 
   "dump": {
    "args": "()", 
    "fn": "<function insert>", 
    "newargs": "{'doc': u'{\"docstatus\":0,\"doctype\":\"Module Def\",\"name\":\"...:\"Registration\",\"app_name\":\"Maharashtra_torism\"}'}"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/__init__.py", 
   "func": "call", 
   "lines": {
    "1030": "\tnewargs = get_newargs(fn, kwargs)", 
    "1031": "", 
    "1032": "\treturn fn(*args, **newargs)", 
    "1033": "", 
    "1034": "def get_newargs(fn, kwargs):"
   }, 
   "lnum": 1032
  }, 
  {
   "call": "(doc={u'__islocal': 1, u'__run_link_triggers': 1, u'__unsaved': 1, u'app_name': u'Maharashtra_torism', u'docstatus': 0, u'doctype': u'Module Def', u'module_name': u'Registration', u'name': u'New Module Def 1', u'owner': u'Administrator'})", 
   "dump": {
    ").insert": "undefined", 
    "doc": "{u'__islocal': 1, u'__run_link_triggers': 1, u'__unsaved': 1, u'app_name': u'Maharashtra_torism', u'docstatus': 0, u'doctype': u'Module Def', u'module_name': u'Registration', u'name': u'New Module Def 1', u'owner': u'Administrator'}", 
    "frappe. get_doc": "<function get_doc>", 
    "global frappe": "<module 'frappe' from '/home/indictrans/workspac...po/frappe-bench/apps/frappe/frappe/__init__.pyc'>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/client.py", 
   "func": "insert", 
   "lines": {
    "153": "\t\treturn parent.as_dict()", 
    "154": "\telse:", 
    "155": "\t\tdoc = frappe.get_doc(doc).insert()", 
    "156": "\t\treturn doc.as_dict()", 
    "157": ""
   }, 
   "lnum": 155
  }, 
  {
   "call": "(self=<frappe.core.doctype.module_def.module_def.ModuleDef object>, ignore_permissions=None, ignore_links=None, ignore_if_duplicate=False, ignore_mandatory=None)", 
   "dump": {
    "self": "<frappe.core.doctype.module_def.module_def.ModuleDef object>", 
    "self. run_post_save_methods": "<bound method ModuleDef.run_post_save_methods of....doctype.module_def.module_def.ModuleDef object>>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "insert", 
   "lines": {
    "247": "\t\t\tself.copy_attachments_from_amended_from()", 
    "248": "", 
    "249": "\t\tself.run_post_save_methods()", 
    "250": "\t\tself.flags.in_insert = False", 
    "251": ""
   }, 
   "lnum": 249
  }, 
  {
   "call": "(self=<frappe.core.doctype.module_def.module_def.ModuleDef object>)", 
   "dump": {
    "self": "<frappe.core.doctype.module_def.module_def.ModuleDef object>", 
    "self. run_method": "<bound method ModuleDef.run_method of <frappe.core.doctype.module_def.module_def.ModuleDef object>>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_post_save_methods", 
   "lines": {
    "903": "\t\t- `update_after_submit` for **Update after Submit**\"\"\"", 
    "904": "\t\tif self._action==\"save\":", 
    "905": "\t\t\tself.run_method(\"on_update\")", 
    "906": "\t\telif self._action==\"submit\":", 
    "907": "\t\t\tself.run_method(\"on_update\")"
   }, 
   "lnum": 905
  }, 
  {
   "call": "(self=<frappe.core.doctype.module_def.module_def.ModuleDef object>, method=u'on_update', *args=(), **kwargs={})", 
   "dump": {
    "Document. hook": "<function hook>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "global Document": "<class 'frappe.model.document.Document'>", 
    "kwargs": "{}", 
    "out": "undefined", 
    "self": "<frappe.core.doctype.module_def.module_def.ModuleDef object>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "run_method", 
   "lines": {
    "770": "", 
    "771": "\t\tfn.__name__ = str(method)", 
    "772": "\t\tout = Document.hook(fn)(self, *args, **kwargs)", 
    "773": "", 
    "774": "\t\tself.run_notifications(method)"
   }, 
   "lnum": 772
  }, 
  {
   "call": "(self=<frappe.core.doctype.module_def.module_def.ModuleDef object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "composed": "<function runner>", 
    "kwargs": "{}", 
    "method": "'on_update'", 
    "self": "<frappe.core.doctype.module_def.module_def.ModuleDef object>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "composer", 
   "lines": {
    "1046": "", 
    "1047": "\t\t\tcomposed = compose(f, *hooks)", 
    "1048": "\t\t\treturn composed(self, method, *args, **kwargs)", 
    "1049": "", 
    "1050": "\t\treturn composer"
   }, 
   "lnum": 1048
  }, 
  {
   "call": "(self=<frappe.core.doctype.module_def.module_def.ModuleDef object>, method='on_update', *args=(), **kwargs={})", 
   "dump": {
    "add_to_return_value": "<function add_to_return_value>", 
    "args": "()", 
    "fn": "<function on_update>", 
    "kwargs": "{}", 
    "self": "<frappe.core.doctype.module_def.module_def.ModuleDef object>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "runner", 
   "lines": {
    "1029": "\t\tdef compose(fn, *hooks):", 
    "1030": "\t\t\tdef runner(self, method, *args, **kwargs):", 
    "1031": "\t\t\t\tadd_to_return_value(self, fn(self, *args, **kwargs))", 
    "1032": "\t\t\t\tfor f in hooks:", 
    "1033": "\t\t\t\t\tadd_to_return_value(self, f(self, method, *args, **kwargs))"
   }, 
   "lnum": 1031
  }, 
  {
   "call": "(self=<frappe.core.doctype.module_def.module_def.ModuleDef object>, *args=(), **kwargs={})", 
   "dump": {
    "args": "()", 
    "builtin getattr": "<built-in function getattr>", 
    "fn": "undefined", 
    "kwargs": "{}", 
    "method": "u'on_update'", 
    "self": "<frappe.core.doctype.module_def.module_def.ModuleDef object>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py", 
   "func": "<lambda>", 
   "lines": {
    "764": "", 
    "765": "\t\tif hasattr(self, method) and hasattr(getattr(self, method), \"__call__\"):", 
    "766": "\t\t\tfn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)", 
    "767": "\t\telse:", 
    "768": "\t\t\t# hack! to run hooks even if method does not exist"
   }, 
   "lnum": 766
  }, 
  {
   "call": "(self=<frappe.core.doctype.module_def.module_def.ModuleDef object>)", 
   "dump": {
    "self": "<frappe.core.doctype.module_def.module_def.ModuleDef object>", 
    "self. create_modules_folder": "<bound method ModuleDef.create_modules_folder of....doctype.module_def.module_def.ModuleDef object>>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/core/doctype/module_def/module_def.py", 
   "func": "on_update", 
   "lines": {
    "13": "\t\tfrappe.clear_cache()", 
    "14": "\t\tif frappe.conf.get(\"developer_mode\"):", 
    "15": "\t\t\tself.create_modules_folder()", 
    "16": "\t\t\tself.add_to_modules_txt()", 
    "17": ""
   }, 
   "lnum": 15
  }, 
  {
   "call": "(self=<frappe.core.doctype.module_def.module_def.ModuleDef object>)", 
   "dump": {
    "frappe. get_app_path": "<function get_app_path>", 
    "global frappe": "<module 'frappe' from '/home/indictrans/workspac...po/frappe-bench/apps/frappe/frappe/__init__.pyc'>", 
    "module_path": "undefined", 
    "self": "<frappe.core.doctype.module_def.module_def.ModuleDef object>", 
    "self. app_name": "u'Maharashtra_torism'", 
    "self. name": "u'Registration'"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/core/doctype/module_def/module_def.py", 
   "func": "create_modules_folder", 
   "lines": {
    "18": "\tdef create_modules_folder(self):", 
    "19": "\t\t\"\"\"Creates a folder `[app]/[module]` and adds `__init__.py`\"\"\"", 
    "20": "\t\tmodule_path = frappe.get_app_path(self.app_name, self.name)", 
    "21": "\t\tif not os.path.exists(module_path):", 
    "22": "\t\t\tos.mkdir(module_path)"
   }, 
   "lnum": 20
  }, 
  {
   "call": "(app_name=u'Maharashtra_torism', *joins=(u'Registration',))", 
   "dump": {
    "app_name": "u'Maharashtra_torism'", 
    "global get_pymodule_path": "<function get_pymodule_path>", 
    "joins": "(u'Registration',)"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/__init__.py", 
   "func": "get_app_path", 
   "lines": {
    "825": "\t:param app: App name.", 
    "826": "\t:param *joins: Join additional path elements using `os.path.join`.\"\"\"", 
    "827": "\treturn get_pymodule_path(app_name, *joins)", 
    "828": "", 
    "829": "def get_site_path(*joins):"
   }, 
   "lnum": 827
  }, 
  {
   "call": "(modulename=u'Maharashtra_torism', *joins=[u'registration'])", 
   "dump": {
    ").__file__": "undefined", 
    "global get_module": "<function get_module>", 
    "global os": "<module 'os' from '/home/indictrans/workspace/Re...ench-repo/frappe-bench/env/lib/python2.7/os.pyc'>", 
    "global scrub": "<function scrub>", 
    "joins": "[u'registration']", 
    "modulename": "u'Maharashtra_torism'", 
    "os. path": "<module 'posixpath' from '/home/indictrans/works...po/frappe-bench/env/lib/python2.7/posixpath.pyc'>", 
    "os.path. dirname": "<function dirname>", 
    "os.path. join": "<function join>"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/__init__.py", 
   "func": "get_pymodule_path", 
   "lines": {
    "840": "\tif not \"public\" in joins:", 
    "841": "\t\tjoins = [scrub(part) for part in joins]", 
    "842": "\treturn os.path.join(os.path.dirname(get_module(scrub(modulename)).__file__), *joins)", 
    "843": "", 
    "844": "def get_module_list(app_name):"
   }, 
   "lnum": 842
  }, 
  {
   "call": "(modulename=u'maharashtra_torism')", 
   "dump": {
    "global importlib": "<module 'importlib' from '/usr/lib/python2.7/importlib/__init__.pyc'>", 
    "importlib. import_module": "<function import_module>", 
    "modulename": "u'maharashtra_torism'"
   }, 
   "file": "/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/__init__.py", 
   "func": "get_module", 
   "lines": {
    "802": "def get_module(modulename):", 
    "803": "\t\"\"\"Returns a module object for given Python module name using `importlib.import_module`.\"\"\"", 
    "804": "\treturn importlib.import_module(modulename)", 
    "805": "", 
    "806": "def scrub(txt):"
   }, 
   "lnum": 804
  }, 
  {
   "call": "(name=u'maharashtra_torism', package=None)", 
   "dump": {
    "builtin __import__": "<built-in function __import__>", 
    "name": "u'maharashtra_torism'"
   }, 
   "file": "/usr/lib/python2.7/importlib/__init__.py", 
   "func": "import_module", 
   "lines": {
    "34": "                break", 
    "35": "            level += 1", 
    "36": "        name = _resolve_name(name[level:], package, level)", 
    "37": "    __import__(name)", 
    "38": "    return sys.modules[name]"
   }, 
   "lnum": 37
  }
 ], 
 "locals": {
  "name": "u'maharashtra_torism'", 
  "package": "None"
 }, 
 "pyver": "Python 2.7.12: /home/indictrans/workspace/Registration/bench-repo/frappe-bench/env/bin/python (prefix: /home/indictrans/workspace/Registration/bench-repo/frappe-bench/env)", 
 "timestamp": "2019-06-10 14:47:14.001384", 
 "traceback": "Traceback (most recent call last):\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/app.py\", line 61, in application\n    response = frappe.handler.handle()\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/handler.py\", line 21, in handle\n    data = execute_cmd(cmd)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/handler.py\", line 56, in execute_cmd\n    return frappe.call(method, **frappe.form_dict)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/__init__.py\", line 1032, in call\n    return fn(*args, **newargs)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/client.py\", line 155, in insert\n    doc = frappe.get_doc(doc).insert()\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py\", line 249, in insert\n    self.run_post_save_methods()\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py\", line 905, in run_post_save_methods\n    self.run_method(\"on_update\")\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py\", line 772, in run_method\n    out = Document.hook(fn)(self, *args, **kwargs)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py\", line 1048, in composer\n    return composed(self, method, *args, **kwargs)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py\", line 1031, in runner\n    add_to_return_value(self, fn(self, *args, **kwargs))\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/model/document.py\", line 766, in <lambda>\n    fn = lambda self, *args, **kwargs: getattr(self, method)(*args, **kwargs)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/core/doctype/module_def/module_def.py\", line 15, in on_update\n    self.create_modules_folder()\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/core/doctype/module_def/module_def.py\", line 20, in create_modules_folder\n    module_path = frappe.get_app_path(self.app_name, self.name)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/__init__.py\", line 827, in get_app_path\n    return get_pymodule_path(app_name, *joins)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/__init__.py\", line 842, in get_pymodule_path\n    return os.path.join(os.path.dirname(get_module(scrub(modulename)).__file__), *joins)\n  File \"/home/indictrans/workspace/Registration/bench-repo/frappe-bench/apps/frappe/frappe/__init__.py\", line 804, in get_module\n    return importlib.import_module(modulename)\n  File \"/usr/lib/python2.7/importlib/__init__.py\", line 37, in import_module\n    __import__(name)\nImportError: No module named maharashtra_torism\n"
}